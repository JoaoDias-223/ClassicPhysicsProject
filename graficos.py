import matplotlib.pyplot as plt
import matplotlib.image as mpimg
# pip install matplotlib

#Gr치fico das trajet칩rias da bola e do rob칪 em um plano 洧논洧녽, at칠 o ponto de intercepta칞칚o;
def grafico1(coordenadas, xbola, ybola,Xi, Yi,vetor,PontoIdeal):
    for l in vetor:
        X=[Xi, float(coordenadas[l][1])]
        Y =[Yi, float(coordenadas[l][2])]
        plt.plot(X, Y, 's')
        plt.plot(xbola, ybola,'k--', color='red')
        plt.plot(X, Y, color ='blue')

    p = len(vetor)
    plt.title(str(p) +' Pontos Poss츾춼veis de Intercepta츾춶츾춲o')
    plt.xlabel('x/s')
    plt.ylabel('y/s')

    img = mpimg.imread("naruto.png") #imagem de fundo
    plt.imshow(img,extent=[0, 9.5, 0, 6.2])

    plt.scatter(float(coordenadas[PontoIdeal][1]),float(coordenadas[PontoIdeal][2]))
    plt.annotate('Ponto com Menor Tempo', xy=(float(coordenadas[PontoIdeal][1]),float(coordenadas[PontoIdeal][2])), xytext=(float(coordenadas[PontoIdeal][1]) +1,float(coordenadas[PontoIdeal][2])+1),
                arrowprops=dict(arrowstyle='->'))

    plt.show()

#Gr치fico das coordenadas 洧논 e 洧녽 da posi칞칚o da bola e do rob칪 em fun칞칚o do tempo 洧노 at칠 o instante de intercepta칞칚o;
def grafico2(xbola, ybola, tbola, Xi, Yi,PontoIdeal):
    XB=[xbola[0], xbola[PontoIdeal]]
    YB=[xbola[0], xbola[PontoIdeal]]
    TB =[tbola[0], tbola[PontoIdeal]]

    plt.plot(XB, TB, 's')
    plt.plot(YB, TB,'k--', color='red')
    plt.ylabel('y/s')

    #img = mpimg.imread("naruto.png") #imagem de fundo
    #plt.imshow(img,extent=[0, 9.5, 0, 6.2])

    plt.show()

#Gr치fico dos componentes 洧녺洧논 e 洧녺洧녽 da velocidade da bola e do rob칪 em fun칞칚o do tempo 洧노 at칠 o instante de intercepta칞칚o;
def grafico3(xbola, ybola, tbola, Xi, Yi,PontoIdeal):
    XB=[xbola[0], xbola[PontoIdeal]]
    YB=[xbola[0], xbola[PontoIdeal]]
    TB =[tbola[0], tbola[PontoIdeal]]

    plt.plot(XB, TB, 's')
    plt.plot(YB, TB,'k--', color='red')
    plt.ylabel('y/s')

    #img = mpimg.imread("naruto.png") #imagem de fundo
    #plt.imshow(img,extent=[0, 9.5, 0, 6.2])

    plt.show()

#Gr치fico dos componentes 洧녩洧논 e 洧녩洧녽 da acelera칞칚o da bola e do rob칪 em fun칞칚o do tempo 洧노 at칠 o instante de intercepta칞칚o;
def grafico4(xbola, ybola, tbola, Xi, Yi,PontoIdeal):
    XB=[xbola[0], xbola[PontoIdeal]]
    YB=[xbola[0], xbola[PontoIdeal]]
    TB =[tbola[0], tbola[PontoIdeal]]

    plt.plot(XB, TB, 's')
    plt.plot(YB, TB,'k--', color='red')
    plt.ylabel('y/s')

    #img = mpimg.imread("naruto.png") #imagem de fundo
    #plt.imshow(img,extent=[0, 9.5, 0, 6.2])

    plt.show()

#Gr치fico da dist칙ncia relativa 洧녬 entre o rob칪 e a bola como fun칞칚o do tempo 洧노 at칠 o instante de intercepta칞칚o
def grafico5(xbola, ybola, tbola, Xi, Yi,PontoIdeal):
    XB=[xbola[0], xbola[PontoIdeal]]
    YB=[xbola[0], xbola[PontoIdeal]]
    TB =[tbola[0], tbola[PontoIdeal]]

    plt.plot(XB, TB, 's')
    plt.plot(YB, TB,'k--', color='red')
    plt.ylabel('y/s')

    #img = mpimg.imread("naruto.png") #imagem de fundo
    #plt.imshow(img,extent=[0, 9.5, 0, 6.2])

    plt.show()